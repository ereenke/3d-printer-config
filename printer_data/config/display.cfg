[display] 
lcd_type: st7920 
cs_pin: PB14 #RS
sid_pin: PE5 #RW
sclk_pin: PB13 #E

[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................

[display_glyph voron]
data:
   .......**.......
   .....******.....
   ....********....
   ..************..
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   .**..**..******.
   .******..**..**.
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   ..************..
   ....********....
   .....******.....
   .......**.......

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

# [display_data __voron_display feed_rate]
# position: 1, 10
# text:
#   {% set frate = printer.gcode_move.extrude_factor %}
#   ~feedrate~
#   { "%03d%%" % (frate * 100) }

[display_data __voron_display progress_text]
#position: 1, 10
position: 2, 0
text:
  {% set progress = printer.display_status.progress %}
  { "{:^10.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 2, 0
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(2, 0, 9, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
[display_data __voron_display chamber]
position: 1, 10
text:
 {% set chamber = printer['temperature_sensor enclosure_temp'] %}
  ~chamber~
  { "%3.0f" % (chamber.temperature,) }
  ~degrees~   

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
  ~voron~
    { " VS.087 " }
  {% endif %}
    
[menu __main __octoprint]
type: list
enable: False
name: OctoPrint

[menu __main __actions]
type: list
name: Actions
index: 0

[menu __main __actions __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
  PAUSE

[menu __main __actions __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
  RESUME

[menu __main __actions __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
  CANCEL_PRINT

[menu __main __options]
type: list
name: Options
index: 1

[menu __main __options __ledON]
type: command
enable: True
name: LED Lights ON
gcode:
  LIGHTS_ON

[menu __main __options __ledOFF]
type: command
enable: True
name: LED Lights OFF
gcode:
  LIGHTS_OFF

[menu __main __options __sheetPrusa]
type: command
enable: True
name: Prusa Sheet
gcode:
  PRUSA_SHEET

[menu __main __options __sheetUltistik]
type: command
enable: True
name: Ultistik Sheet
gcode:
  ULTISTIK_SHEET